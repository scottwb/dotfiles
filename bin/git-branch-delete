#!/usr/bin/env bash
#
# git-branch-delete
#
#   Deletes a branch both locally and remotely in the origin.
#

###############################################################################
# Usage
###############################################################################
USAGE=$(cat <<'EOT'

Usage:

  git branch-delete <branch-name>

  Deletes the specified branch both locally and remotely in the origin.

  PARAMETERS:

    branch-name:
      The name of the branch to delete.

EOT
)


###############################################################################
# Main Program
###############################################################################
branch_name="${1}"
if [ "${branch_name}" == "" ]; then
  echo "${USAGE}"
  exit -1
fi

if [ "${branch_name}" == "master" ] || [ "${branch_name}" == "main" ] || [ "${branch_name}" == "dev" ] || [ "${branch_name}" == "qa" ] || [ "${branch_name}" == "prod" ]; then
  echo
  echo
  echo "Sorry, I can't let you delete '${branch_name}'."
  exit -1
fi

current_branch=$(git symbolic-ref --short -q HEAD)

if [ "${branch_name}" == "${current_branch}" ]; then
  echo
  echo
  echo "Sorry, you can't delete the current working branch."
  echo "Switch to another branch first."
  exit -1
fi

git branch -d ${branch_name}
git push origin :${branch_name}
